<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" href="https://firebasestorage.googleapis.com/v0/b/school-fff9a.appspot.com/o/favicon.ico.ico?alt=media&token=3ef25aa8-5801-4677-85eb-c5c8aed3bde2">
  <style>
    body {
      padding: 50px;
      font: 14px "Lucida Grande", Helvetica, Arial, sans-serif;
    }

    a {
      color: #00b7ff;
    }

    .topnav {
      background-color: #333;
      overflow: hidden;
    }

    .topnav a {
      float: left;
      color: #f2f2f2;
      text-align: center;
      padding: 14px 16px;
      text-decoration: none;
      font-size: 17px;
    }

    .topnav a:hover {
      background-color: #ddd;
      color: black;
    }

    .topnav a.active {
      background-color: #04aa6d;
      color: white;
    }
  </style>
  <title>Simple Cloud</title>
</head>
<body style="background-color: #ACFFFC;">
  <div class="topnav">
    <a class="active" href="#home">Home</a>
    <a href="#news">News</a>
    <a href="#contact">Contact</a>
    <a href="#about">About</a>
    <a href=""></a>
    <p id="currentuser" name="currentuser" style="float: right; color: white; padding-right: 5px;">
      <% if (user != null) { %> 
        <%= "You're logged in as " + user + "." %> 
      <% } %>
    </p>
  </div>
  <h1>Simple Cloud</h1>
  <input type="file" id="inp" />
  <button id="btn">Upload File</button>
  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-app.js";
    import {
      getStorage,
      ref,
      uploadBytesResumable,
      getDownloadURL,
    } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-storage.js";
    import {
      getAuth,
      createUserWithEmailAndPassword,
      signInWithEmailAndPassword,
      onAuthStateChanged,
    } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-auth.js";

    const firebaseConfig = {
      apiKey: "AIzaSyAYu4LBl-MJsydo6mHEl1qnffTtteckkwM",
      authDomain: "school-fff9a.firebaseapp.com",
      projectId: "school-fff9a",
      storageBucket: "school-fff9a.appspot.com",
      messagingSenderId: "625820194936",
      appId: "1:625820194936:web:a9809af85889e01250f58d",
      measurementId: "G-XHBF8HKRP5",
    };

    const app = initializeApp(firebaseConfig);
    const storage = getStorage();
    const auth = getAuth();

    // Create the file metadata
    /** @type {any} */
    const metadata = {};

    document.getElementById("btn").addEventListener("click", uploadFile, false);

    function uploadFile() {
      // Upload file and metadata to the object 'images/mountains.jpg'
      const file = document.querySelector("#inp").files[0];
      const storageRef = ref(storage, "files/" + file.name);
      const uploadTask = uploadBytesResumable(storageRef, file, metadata);
      // Listen for state changes, errors, and completion of the upload.
      uploadTask.on(
        "state_changed",
        (snapshot) => {
          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded
          const progress =
            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
          console.log("Upload is " + progress + "% done");
          switch (snapshot.state) {
            case "paused":
              console.log("Upload is paused");
              break;
            case "running":
              console.log("Upload is running");
              break;
          }
        },
        (error) => {
          // A full list of error codes is available at
          // https://firebase.google.com/docs/storage/web/handle-errors
          switch (error.code) {
            case "storage/unauthorized":
              // User doesn't have permission to access the object
              break;
            case "storage/canceled":
              // User canceled the upload
              break;

            // ...

            case "storage/unknown":
              // Unknown error occurred, inspect error.serverResponse
              break;
          }
        },
        () => {
          // Upload completed successfully, now we can get the download URL
          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {
            console.log("File available at", downloadURL);
          });
        }
      );
    }
  </script>
</body>
